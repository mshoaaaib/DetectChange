name: JIRA Issue Transition

on:
  repository_dispatch:
    types:
      - jira_issue_transition

jobs:
  process-jira-event:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: List modified files
        id: list-files
        run: |
          git fetch origin
          # Check for changes in the /server/database folder
          git diff --name-only origin/main origin/${{ github.event.client_payload.issueKey }} -- 'server/database/*' > changed_database_files.txt
          # Check for changes in /server/models folder or ItemDefinition.ts
          git diff --name-only origin/main origin/${{ github.event.client_payload.issueKey }} -- 'server/models/*' 'src/threatmodel/ItemDefinition.ts' > changed_models_files.txt
          echo "::set-output name=changed_database_files::$(cat changed_database_files.txt)"
          echo "::set-output name=changed_models_files::$(cat changed_models_files.txt)"

      - name: Update JIRA Custom Field
        if: steps.list-files.outputs.changed_database_files != '' || steps.list-files.outputs.changed_models_files != ''
        run: |
          # Extract issueKey from the payload
          issueKey=${{ github.event.client_payload.issueKey }}
          
          # Your JIRA API URL
          jiraUrl="https://gittest.atlassian.net/rest/api/3/issue/${issueKey}"
          
          # Your JIRA Custom Field ID
          customFieldId="customfield_10090"
          
          # JIRA username (email)
          jiraUsername="shoaib40ce@gmail.com"
          
          # JIRA API token or password
          jiraToken=${{ secrets.JIRA_API }}
          
          # Check if there are changes in /server/database
          if cat changed_database_files.txt | grep -qE 'server/database/'; then
            # Update custom field for API change
            curl -X PUT \
              -H "Content-Type: application/json" \
              -u "${jiraUsername}:${jiraToken}" \
              -d '{
                "fields": {
                  "'${customFieldId}'": "API Change detected"
                }
              }' \
              "${jiraUrl}"
          fi
          
          # Check if there are changes in /server/models or ItemDefinition.ts
          if cat changed_models_files.txt | grep -qE 'server/models/|src/threatmodel/ItemDefinition.ts'; then
            # Update custom field for schema change
            curl -X PUT \
              -H "Content-Type: application/json" \
              -u "${jiraUsername}:${jiraToken}" \
              -d '{
                "fields": {
                  "'${customFieldId}'": "Schema Change detected"
                }
              }' \
              "${jiraUrl}"
          fi
